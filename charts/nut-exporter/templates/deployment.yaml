apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nut-exporter.fullname" . }}
  labels:
    {{- include "nut-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nut-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nut-exporter.labels" . | nindent 8 }}
    spec:
      {{- if .Values.kubeRBACProxy.enabled }}
      automountServiceAccountToken: true
      {{- end }}
      hostNetwork: {{ .Values.podHostNetwork }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- $servicePort := ternary .Values.kubeRBACProxy.port .Values.service.port .Values.kubeRBACProxy.enabled }}
        - name: nut-exporter
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.envSecret }}
          envFrom:
            - secretRef:
                name: {{ include "nut-exporter.fullname" . }}-env
          {{- end }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.extraArgs }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if eq .Values.kubeRBACProxy.enabled false }}
          ports:
            - name: {{ .Values.service.portName }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{-  if .Values.kubeRBACProxy.enabled  }}
        - name: kube-rbac-proxy
          args:
            {{-  if .Values.kubeRBACProxy.extraArgs  }}
            {{- .Values.kubeRBACProxy.extraArgs | toYaml | nindent 12 }}
            {{-  end  }}
            - --secure-listen-address=:{{ .Values.service.port}}
            - --upstream=http://127.0.0.1:{{ $servicePort }}/
            - --proxy-endpoints-port={{ .Values.kubeRBACProxy.proxyEndpointsPort }}
            - --config-file=/etc/kube-rbac-proxy-config/config-file.yaml
          volumeMounts:
            - name: kube-rbac-proxy-config
              mountPath: /etc/kube-rbac-proxy-config
          imagePullPolicy: {{ .Values.kubeRBACProxy.image.pullPolicy }}
          {{- if .Values.kubeRBACProxy.image.sha }}
          image: "{{ .Values.global.imageRegistry | default .Values.kubeRBACProxy.image.registry}}/{{ .Values.kubeRBACProxy.image.repository }}:{{ .Values.kubeRBACProxy.image.tag }}@sha256:{{ .Values.kubeRBACProxy.image.sha }}"
          {{- else }}
          image: "{{ .Values.global.imageRegistry | default .Values.kubeRBACProxy.image.registry}}/{{ .Values.kubeRBACProxy.image.repository }}:{{ .Values.kubeRBACProxy.image.tag }}"
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.port}}
              name: {{ .Values.kubeRBACProxy.portName }}
              {{- if .Values.kubeRBACProxy.enableHostPort }}
              hostPort: {{ .Values.service.port }}
              {{- end }}
            - containerPort: {{ .Values.kubeRBACProxy.proxyEndpointsPort }}
              {{- if .Values.kubeRBACProxy.enableProxyEndpointsHostPort }}
              hostPort: {{ .Values.kubeRBACProxy.proxyEndpointsPort }}
              {{- end }}
              name: "http-healthz"
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: {{ .Values.kubeRBACProxy.proxyEndpointsPort }}
              path: healthz
            initialDelaySeconds: 5
            timeoutSeconds: 5
          {{- if .Values.kubeRBACProxy.resources }}
          resources:
          {{- toYaml .Values.kubeRBACProxy.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.terminationMessageParams.enabled }}
          {{- with .Values.terminationMessageParams }}
          terminationMessagePath: {{ .terminationMessagePath }}
          terminationMessagePolicy: {{ .terminationMessagePolicy }}
          {{- end }}
          {{- end }}
          {{- with .Values.kubeRBACProxy.env }}
          env:
            {{- range $key, $value := $.Values.kubeRBACProxy.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.kubeRBACProxy.containerSecurityContext }}
          securityContext:
          {{ toYaml .Values.kubeRBACProxy.containerSecurityContext | nindent 12 }}
        {{- end }}
        {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        {{- if .Values.kubeRBACProxy.enabled }}
      volumes:
        - name: kube-rbac-proxy-config
          configMap:
            name: {{ template "nut-exporter.fullname" . }}-rbac-config
        {{- end }}
